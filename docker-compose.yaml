services:
  api:
    image: flight-delays-api:latest
    build:
      context: api
      dockerfile: Dockerfile.dev
    ports:
      - 8000:8000
    depends_on:
      database:
        condition: service_healthy
    links:
      - database
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    env_file:
      - .env

  database:
    image: postgres:16.3
    restart: always
    volumes:
      - ./.docker/data.sql:/docker-entrypoint-initdb.d/data.sql # Create tables and add dummy data
      - ./.docker/new_user.sql:/docker-entrypoint-initdb.d/new_user.sql # Create a new user
      # To persist the container data in the host machine
      - ./pdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: flight-delays
    secrets:
      - db_password
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 30s

secrets:
  db_password:
    file: db_password.txt
